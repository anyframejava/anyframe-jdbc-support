<?xml version="1.0"?>
<!--
  - 
  -->
<project name="Anyframe_Jdbc-Support_Plugin_Docbook" default="all">

	<description>
            This Ant build.xml file is used to transform DocBook XML to various
    </description>

	<property name="book.name" value="jdbc-support" />
	<property name="version" value="1.0.1"/>	
	<!--
	  - set dbf installer folder and sample project folder
	 -->
	<property name="dbf.home" value="D:\SVN\3rd-party\docbook" />  
	<!--
      - Configure basic properties that will be used in the file.
      -->
	<property name="docbook.xsl.dir" value="${dbf.home}/stylesheet/docbook-xsl" />
	<property name="css.dir" value="${dbf.home}/css" />
	<property name="image.dir" value="image" />
	<property name="download.dir" value="download" />
	<property name="font.dir" value="${dbf.home}/fonts" />
	<property name="target.dir" value="target/${book.name}/${version}/reference" /> 
	<property name="html.dir" value="${target.dir}/html" />
	<property name="htmlsingle.dir" value="${target.dir}/htmlsingle" />
	<property name="fo.dir" value="${target.dir}/fo" />
	<property name="pdf.dir" value="${target.dir}/pdf" />
	<property name="src.dir" value="doc" />
	<property name="src.tmp" value="doc/temp" />
	<property name="xalan.lib.dir" value="${dbf.home}/software/fop/lib" />

	<!--
		- Usage of the differect style sheets which will be used for the transformation
	-->
	<property name="html.stylesheet" value="${docbook.xsl.dir}/anyframe/html/html.xsl" />
	<property name="chunk-html.stylesheet" value="${docbook.xsl.dir}/anyframe/html/chunk.xsl" />
	<property name="dbk.fo.stylesheet" value="${docbook.xsl.dir}/anyframe/pdf/pdf.xsl" />

	<taskdef name="fop" classname="org.apache.fop.tools.anttasks.Fop">
		<classpath>
			<fileset dir="${dbf.home}/software/fop/lib">
				<include name="*.jar" />
			</fileset>
			<fileset dir="${dbf.home}/software/fop/build">
				<include name="fop.jar" />
				<include name="fop-hyph.jar" />
			</fileset>

		</classpath>
	</taskdef>

	<!--
      - Sets up the classpath for the Xalan and Xerces implementations
      - that are to be used in this script, since the versions that ship
      - with Ant may be out of date.
      -->
	<path id="xalan.classpath">
		<fileset dir="${xalan.lib.dir}" id="xalan.fileset" />
	</path>

	<!--
      - target:  usage
      -->
	<target name="usage" description="Prints the Ant build.xml usage">
		<echo message="Use -projecthelp to get a list of the available targets." />
	</target>

	<!--
      - target:  clean
      -->
	<target name="clean" description="Cleans up generated files.">
		<delete dir="${target.dir}" />
	</target>

	<!--
      - target:  depends
      -->
	<target name="depends">
		<mkdir dir="${html.dir}" />
		<mkdir dir="${htmlsingle.dir}" />
		<mkdir dir="${pdf.dir}" />
	</target>

	<!--
	- target:  copy 
	- Copies the images from the subdirectories to the target folder
	-->
	<target name="copy">
		<echo message="Copy the images" />
		<copy todir="${target.dir}/image">
			<fileset dir="${image.dir}">
				<include name="**/*.*" />
			</fileset>
		</copy>
		<echo message="Copy the download" />
		<copy todir="${target.dir}/download">
			<fileset dir="${download.dir}">
				<include name="**/*.*" />
			</fileset>
		</copy>
		<echo message="Copy the fonts" />
		<copy todir="fonts">
			<fileset dir="${font.dir}">
				<include name="**/*.*" />
			</fileset>
		</copy>
	</target>
	<!--
      - target:  build-html
      - description:  Iterates through a directory and transforms
      -     .xml files into .html files using the DocBook XSL.
      -->
	<target name="build-html" depends="depends" description="Generates HTML files from DocBook XML">
		<xslt style="${html.stylesheet}" extension=".html" basedir="${src.dir}" destdir="${htmlsingle.dir}">
			<include name="${book.name}.xml" />
			<param name="html.stylesheet" expression="anyframe.css" />
			<param name="generate.toc" expression="book toc, title"/>
			<classpath refid="xalan.classpath" />
		</xslt>
		<copy todir="${htmlsingle.dir}">
			<fileset dir="${css.dir}/">
				<include name="anyframe.css" />
			</fileset>
		</copy>
	</target>

	<!--
			- target:  chunks-html
			- description:  Iterates through a directory and transforms
			-     .xml files into separate .html files using the DocBook XSL.
		-->
	<target name="build-chunks" depends="depends" description="Generates chunk HTML files from DocBook XML">
		<xslt style="${chunk-html.stylesheet}" extension=".html" basedir="${src.dir}" destdir="${html.dir}">
			<include name="${book.name}.xml" />
			<param name="html.stylesheet" expression="anyframe.css" />
			<param name="generate.toc" expression="book toc, title"/>
			<classpath refid="xalan.classpath" />
		</xslt>
		<!-- Copy the stylesheet to the same directory as the HTML files -->
		<copy todir="${html.dir}">
			<fileset dir="${css.dir}/">
				<include name="anyframe.css" />
			</fileset>
		</copy>

	</target>

	<target name="build-pdf" depends="depends" description="Generates HTML files from DocBook XML">
		<xslt style="${dbk.fo.stylesheet}" extension=".fo" basedir="${src.dir}" destdir="${fo.dir}" force="true">
			<include name="${book.name}.xml" />
			<param name="admon.graphics.path" expression="${docbook.xsl.dir}/images/" />
			<param name="img.src.path" expression="${image.dir}/" />
			<param name="callout.graphics.path" expression="${image.dir}/common/callouts/" />
			<param name="body.font.family" expression="UnDotum" />
			<param name="generate.toc" expression="book toc, title"/>
			<param name="ignore.image.scaling" expression="1"/>
			<classpath refid="xalan.classpath" />
		</xslt>
				
		<move tofile="${fo.dir}/${book.name}-${version}.fo" file="${fo.dir}/${book.name}.fo"/>
		
		<!-- Convert FO Files into pdf -->
		<fop format="application/pdf" outdir="${pdf.dir}" userconfig="${dbf.home}/conf/fop-config.xml" force="true">
			<fileset dir="${fo.dir}">
				<include name="**/*.fo" />
			</fileset>
		</fop> 
	</target>
	
	<target name="all" depends="clean, copy, build-html, build-chunks, build-pdf" />

</project>